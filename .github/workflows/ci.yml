# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  # test:

  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   env:
  #     MONGO_DB: ${{ secrets.MONGO_DB }}
  #     MONGO_FULL_URI: ${{ secrets.MONGO_FULL_URI }}

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm run install-all
  #   - run: npm run build --if-present
  #   - run: npm test

  Deploy:
      # needs: Test
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [16.x]
          # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      env:
          # PEM file need to be saved in it's entirty!
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          HOSTNAME : ${{ secrets.AWS_HOSTNAME }}
          USERNAME : ${{ secrets.AWS_USERNAME }}

      steps:
        - uses: actions/checkout@v3
        - name: Deploy in EC2
          # Must specify the path to the correct node binary to run the correct version of NPM SSH does not pick up the correct version by default
          # can run `which -a node` and `which -a npm` to determine the path to availiable binary builds.
          # then run `<PATH> --version` to determine which is the correct version to run below in the script
          run: |
            echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
            ssh -i private_key ${USERNAME}@${HOSTNAME} '
            cd /home/ubuntu/Trim.io
            git checkout CD-Aws &&
            git fetch --all &&
            git reset --hard origin/CD-Aws &&
            git pull origin CD-Aws &&
            npx node -v &&
            npx npm -v
            '

